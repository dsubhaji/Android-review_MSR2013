1. Person id
2. Name
3. Email
4. IsBotAccount

select A.* from (SELECT distinct `PersonId` as OwnerId,`Name`,`Email`,`IsbotAccount` FROM `person`)A natural join owner_with_id_notbot1
------------------------------------------------------------------------------------------------------------------
5.Number of reviews owned by this person

SELECT A.OwnerId,count(*) FROM `review` A natural join owner_with_id_notbot1 B group by A.OwnerId
------------------------------------------------------------------------------------------------------------------
6. Number of reviews owned by this person that are in status = merged

select D.OwnerId,C.cnt from owner_with_id_notbot1 D left join (SELECT A.OwnerId,count(*) as cnt FROM (select * from `review` where Status='merged') A natural join owner_with_id_notbot1 B group by A.OwnerId) C on D.OwnerId=C.OwnerId
------------------------------------------------------------------------------------------------------------------
7. Number of reviews owned by this person that are in status = abandoned

select D.OwnerId,C.cnt from owner_with_id_notbot1 D left join (SELECT A.OwnerId,count(*) as cnt FROM (select * from `review` where Status='Abandoned') A natural join owner_with_id_notbot1 B group by A.OwnerId) C on D.OwnerId=C.OwnerId
--------------------------------------------------------------------------------------------------------------------
8. Number of reviews commented upon by this person

select C.OwnerId,B.cnt from owner_with_id_notbot1 C left join (select A.OwnerId,count(*) as cnt from (select ReviewId,AuthorId as OwnerId from comment group by ReviewId,AuthorId) A group by A.OwnerId) B on C.OwnerId=B.OwnerId


--------------------------------------------------------------------------------------------------------------------
9. Number of comments by this person across all reviews

select A.OwnerId, B.cnt from owner_with_id_notbot1 A left join (select AuthorId as OwnerId,count(*) cnt from comment group by AuthorId) B  on A.OwnerId=B.OwnerId

-------------------------------------------------------------------------------------------------------------------
10. Average number of comments per review by this person

select E.OwnerId,E.cnt1/F.cnt from (select A.OwnerId, B.cnt as cnt1 from owner_with_id_notbot1 A left join (select AuthorId as OwnerId,count(*) cnt from comment group by AuthorId) B  on A.OwnerId=B.OwnerId)E natural join (select C.OwnerId,B.cnt from owner_with_id_notbot1 C left join (select A.OwnerId,count(*) as cnt from (select ReviewId,AuthorId as OwnerId from comment group by ReviewId,AuthorId) A group by A.OwnerId) B on C.OwnerId=B.OwnerId) F

------------------------------------------------------------------------------------------------------------------
11.Number of approvals by this person

select A.OwnerId,B.cnt from owner_with_id_notbot1 A left join (SELECT PersonId as OwnerId ,count(*) as cnt FROM `approval` group by PersonId) B on A.OwnerId=B.OwnerId

------------------------------------------------------------------------------------------------------------------

12.Average approval score by this person (total approval scores divided by number of approvals)

select A.Ownerid,A.cnt1/B.cnt from (select A.OwnerId,B.cnt as cnt1 from owner_with_id_notbot1 A left join (SELECT PersonId as OwnerId ,count(*) as cnt FROM `approval` group by PersonId) B on A.OwnerId=B.OwnerId) A natural join (select A.OwnerId,B.cnt from owner_with_id_notbot1 A left join (select A.OwnerId ,count(*) as cnt from (SELECT PersonId as OwnerId,ReviewId as Rid FROM `approval` group by PersonId,ReviewId)A group by A.OwnerId) B on A.OwnerId=B.OwnerId) B
--------------------------------------------------------------------------------------------------------------

13.Median approval score by this person

1.select distinct A.OwnerId,B.cnt from  owner_with_id_notbot1 A left join (SELECT `ReviewId`,`PersonId` as OwnerId,count(*) as cnt FROM `approval` group by `PersonId`,`ReviewId`) B on A.OwnerId=B.OwnerId



2.SELECT A.OwnerId,B.median FROM owner_with_id_notbot1 A left join temp B on A.OwnerId=B.OwnerId



-----------------------------------------------------------------------------------------------------------------

14.Time stamp of first comment


select A.OwnerId,mi from owner_with_id_notbot1 A left join (SELECT `AuthorId` as OwnerId,min(`WrittenOn`) as mi FROM `comment` group by `AuthorId`) B on A.OwnerId=B.OwnerId

--------------------------------------------------------------------------------------------------------------------

14.Time stamp of last comment


select A.OwnerId,mi from owner_with_id_notbot1 A left join (SELECT `AuthorId` as OwnerId,max(`WrittenOn`) as mi FROM `comment` group by `AuthorId`) B on A.OwnerId=B.OwnerId



-------------------------------------------------------------------------------------------------------------------

15.Time stamp of last comment
16. Comment span (difference in hours between first and last comment)


select A.OwnerId,mini,maxi,diffdate from owner_with_id_notbot1 A left join (SELECT `AuthorId` as OwnerId,min(`WrittenOn`)as mini,max(`WrittenOn`) as maxi,TIMESTAMPDIFF(MINUTE,min(`WrittenOn`),max(`WrittenOn`))/60 as diffdate FROM `comment` group by `AuthorId`) B on A.OwnerId=B.OwnerId


------------------------------------------------------------------------------------------------------------------
17. Time stamp of first approval
18. Time stamp of last approval

select A.OwnerId,mini,maxi from owner_with_id_notbot1 A left join (SELECT `PersonId` as OwnerId,min(`ReviewedWhen`) as  mini ,max(`ReviewedWhen`) as maxi FROM `approval` group by PersonId)B on A.OwnerId=B.OwnerId
---------------------------------------------------------------------------------------------------------------------

19.Approval span (difference in hours between first and last approval)


select A.OwnerId,mini,maxi,TIMESTAMPDIFF(MINUTE,mini,maxi)/60 from owner_with_id_notbot1 A left join (SELECT `PersonId` as OwnerId,min(`ReviewedWhen`) as  mini ,max(`ReviewedWhen`) as maxi FROM `approval` group by PersonId)B on A.OwnerId=B.OwnerId

---------------------------------------------------------------------------------------------------------------------
20. Degree of this person in DRCN
21. Betweenness of this person in DRCN
22. Clustering coefficient of this person in DRCN (Use function
transitivity() in igraph)
23. Closeness centrality of this person in DRCN (Use function
closeness() in igraph
24. Eigenvector centrality of this person in DRCN (Use function
evcent() in igraph)
25. Pagerank of this person in DRCN  (Use fucntion page.rank() in igraph)


g=read.graph("C:\\Users\\proshant\\Desktop\\20July14\\DRCN.net",format="pajek")
d=degree(g)
b=betweenness(g)
t=transitivity(g,type="local",vids=V(g))
c=closeness(g,vids=V(g))
e=evcent(g)
p=page.rank(g)

write.table(x=d,"C:\\Users\\proshant\\Desktop\\20July14\\degree.csv",sep = ",")
write.table(x=b,"C:\\Users\\proshant\\Desktop\\20July14\\betweenness.csv",sep = ",")
write.table(x=t,"C:\\Users\\proshant\\Desktop\\20July14\\transitivity.csv",sep = ",")
write.table(x=c,"C:\\Users\\proshant\\Desktop\\20July14\\closeness.csv",sep = ",")
write.table(x=e$vector,"C:\\Users\\proshant\\Desktop\\20July14\\eigen.csv",sep = ",")
write.table(x=p$vector,"C:\\Users\\proshant\\Desktop\\20July14\\page.csv",sep = ",")









